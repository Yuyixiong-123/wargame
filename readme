first time try

--2022年12月20日
PSO算法中，如果MA，MB矩阵的数值比较大，如235这种，就需要惯性项比较大才能够迅速收敛，不然马上就会陷入局部最优。在解决论文《A predator-prey particle swarm optimization approach to multiple UCAV air combat modeled by dynamic game theory》中提出的Table2时非常明显，可以看出惯性项从大到小的作用。

--2022年12月20日20:35:41
PSO算法都是平均分概率了，是个局部最优难以跳出，需要随着输入参数做调参，现在明显鲁棒性不强，碰对了才能得到结果。
或者使用论文中提出的“捕食者”优化，可能可以缓解陷入局部最优。

--2022年12月20日21:06:09
如何跳出局部最优解，是一个很重要的研究问题……难怪文章中要用改进的PSO算法; 
使用更大的人口基数：p_num 比 迭代次数更有用。如果能够收敛到最优解，那么4,5次就收敛了。
今天解决了PSO算法求解纳什均衡的问题
但是大维度AB矩阵还没测试，留给明天吧      

--2022年12月21日
代码还需放缩到一定数量级范围，如-1~2，才能够使得参数处于最优水平，才能保证截断参数和停滞参数是正确的数量级。
测试1e4的计算需要8秒1步。
; ! 测试1e5出现内存占用过大问题，32G内存直接满了，还没有计算出第一步。
; TODO 必须看看别人是怎么解决这问题的……以及是如何在2G内存的电脑上完成计算的。
实际上，就单说每个单位的移动，就是9个变量，己方5个单位的移动就已经是9^5差不多1e5了，这个PSO算法肯定还是要优化的。

--2022年12月22日
; 在构建这个模型的时候，时刻要考虑实现的效率高不高，因为稍微慢一点，在10^6的情况下就是十多分钟……E.g. 数值索引
; todo 可以先测试一下